* {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

:root {
  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  background-color: #242424;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  --rounding: 2rem;
  --color-primary: hsl(33, 100%, 88%);
  --text: hsla(0, 0%, 100%, 0.87);
  color: var(--text);

  --player-black: hsl(0, 0%, 7%);
  --player-white: hsl(180, 100%, 97%);

  --player-color: var(--player-black);
  --opponent-color: var(--player-white);

  --emphasize: linear(
    0 0%,
    0 1.8%,
    0.01 3.6%,
    0.03 6.35%,
    0.07 9.1%,
    0.13 11.4%,
    0.19 13.4%,
    0.27 15%,
    0.34 16.1%,
    0.54 18.35%,
    0.66 20.6%,
    0.72 22.4%,
    0.77 24.6%,
    0.81 27.3%,
    0.85 30.4%,
    0.88 35.1%,
    0.92 40.6%,
    0.94 47.2%,
    0.96 55%,
    0.98 64%,
    0.99 74.4%,
    1 86.4%,
    1 100%
  );
}
html {
  box-sizing: border-box;
}

.player-two {
  --player-color: var(--player-white);
  --opponent-color: var(--player-black);
}

main {
  min-height: 100dvh;
  display: flex;
  flex-direction: column;
  place-items: center;
  container-type: inline-size;
}

.status-bar {
  display: flex;
  gap: 2rem;
  align-items: center;

  button {
    padding: 0.5rem 1rem;
  }
}

h2 {
  margin-block: 1rem;
}
.flex {
  display: flex;
  margin-block: auto;
  /* margin-block-end: 2rem; */
}

.board {
  transform: scale3d();
  display: grid;
  --fields: repeat(7, 1fr);
  grid-template-columns: var(--fields);
  grid-template-rows: var(--fields);
  grid-template-areas:
    'a7 . . d7 . . g7'
    '. b6 . d6 . f6 .'
    '. . c5 d5 e5 . .'
    'a4 b4 c4 . e4 f4 g4'
    '. . c3 d3 e3 . .'
    '. b2 . d2 . f2 .'
    'a1 . . d1 . . g1';
  height: min(85cqh, 85cqw);
  outline: 2px solid var(--color-primary);
  aspect-ratio: 1;
  padding: min(5cqh, 5cqw);

  place-items: center;
  border-radius: var(--rounding);
}

.point {
  --place: a1;
  grid-area: var(--place);
  width: 3rem;
  width: min(1cqh, 1cqw);
  width: 100%;
  aspect-ratio: 1;
  position: relative;

  &:not(.p1, .p2) {
    cursor: pointer;
  }

  body.phase-two &:not(.p1, .p2) {
    cursor: unset;
  }
  body.phase-two:not(.player-two) &.p1 {
    cursor: pointer;
  }
  body.phase-two.player-two &.p2 {
    cursor: pointer;
  }

  body:has(.play-piece) &:not(.p1, .p2):hover::after {
    width: min(6cqh, 6cqw);
    background-color: oklch(from var(--player-color) l c h / 66%);
    backdrop-filter: blur(1px);
  }
  &::after {
    content: '';
    /* width: min(0.5cqh, 0.5cqw); */
    aspect-ratio: 1;
    position: absolute;
    inset: 50%;
    border-radius: 50%;
    transform: translate(-50%, -50%);
    background-color: var(--color-primary);
  }

  body.phase-two &:not(.p1, .p2):hover::after {
    width: min(0cqh, 0cqw);
    background-color: var(--color-primary);
  }
}

.play-piece {
  display: none;
}
:not(:has(.point:hover)) .play-piece {
  --x: -40px;
  --y: -40px;
  position: absolute;
  left: var(--x);
  top: var(--y);
  transform: translate(-50%, -50%);
  --place: none;
  width: min(6cqh, 6cqw);
  aspect-ratio: 1;
  background-color: oklch(from var(--player-color) l c h / 66%);
  box-shadow: 1px 1px 0px hsl(from var(--player-color) 0 0 calc(l * 0.5) / 66%);
  backdrop-filter: blur(1px);
  border-radius: 50%;
}
body.is-player .play-piece {
  display: block;
}

body.phase-two .play-piece {
  display: none;
}

.p1::after,
.p2::after,
.p1ind::after,
.p2ind::after {
  content: '';
  width: min(6cqh, 6cqw);
  background-color: var(--player-black);
  aspect-ratio: 1;
  position: absolute;
  inset: 50%;
  border-radius: 50%;
  transform: translate(-50%, -50%);
  box-shadow: 1px 1px 0px hsl(from var(--player-black) 0 0 calc(l * 0.5));
}
.p2::after,
.p2ind::after {
  background-color: var(--player-white);
  box-shadow: 1px 1px 0px hsl(from var(--player-white) 0 0 calc(l * 0.5));
}

.line,
.line-v {
  --line: 1/1/2/8;
  grid-area: var(--line);
  height: 4px;
  background-color: var(--color-primary);
  width: calc(100% - min(10.5cqh, 10.5cqw));
  border-radius: 4px;
}

.line-v {
  width: 4px;
  height: calc(100% - min(10.5cqh, 10.5cqw));
  border-radius: 4px;
}

.container {
  container-type: inline-size;
  display: flex;
  flex-direction: column;
  justify-content: start;
  align-items: center;
  gap: 1rem;
  margin-block-start: min(9vh, 9vw);

  .p1ind:after,
  .p2ind:after,
  .p1ind,
  .p2ind {
    display: block;
    width: min(3.5vw, 3.5vh);
    aspect-ratio: 1;
    position: relative;
  }
}

.mill {
  width: min(7cqh, 7cqw);
  color: var(--player-color);
  grid-area: 4/4/5/5;
}

.hidden {
  display: none;
}

.move {
  transition: transform 500ms;
  transition-timing-function: linear(
    0 0%,
    0 1.8%,
    0.01 3.6%,
    0.03 6.35%,
    0.07 9.1%,
    0.13 11.4%,
    0.19 13.4%,
    0.27 15%,
    0.34 16.1%,
    0.54 18.35%,
    0.66 20.6%,
    0.72 22.4%,
    0.77 24.6%,
    0.81 27.3%,
    0.85 30.4%,
    0.88 35.1%,
    0.92 40.6%,
    0.94 47.2%,
    0.96 55%,
    0.98 64%,
    0.99 74.4%,
    1 86.4%,
    1 100%
  );
}

.clickablePiece,
.selected {
  cursor: pointer;
  outline: 5px solid hsl(from var(--player-color) h s l/ 66%);
  outline-offset: -0.5rem;
  border-radius: 50%;
}

#pwa-toast {
  visibility: hidden;
  position: fixed;
  right: 0;
  bottom: 0;
  border-radius: 4px;
  z-index: 1;
  text-align: left;
  box-shadow: 2px 2px 5px var(--color-primary);
  border: 2px solid var(--color-primary);
  border-radius: 0.75rem;
  font-weight: 600;
  padding: 1.5rem 2rem;
  margin: 2rem;
  display: grid;
}
#pwa-toast .message {
  margin-bottom: 8px;
}
#pwa-toast .buttons {
  display: flex;
}
#pwa-toast.show {
  visibility: visible;
}
button#pwa-refresh {
  display: none;
}
#pwa-toast.show.refresh button#pwa-refresh {
  display: block;
}

button {
  padding: 0.375rem 0.75rem;
  cursor: pointer;
  border-radius: 0.25rem;
  border: none;
  font: inherit;
  letter-spacing: 1px;
}

:focus-visible,
button:hover {
  outline: 2px solid var(--color-primary);
  outline-offset: 2px;
}

.rooms {
  position: absolute;
  right: 0;
  top: 3rem;
  padding: 0.5rem 1rem;
  text-align: end;
  background-color: #242424;
  border-radius: 0.5rem;

  input {
    font: inherit;
    color: inherit;
    padding: 0.375rem 0.75rem;
    letter-spacing: 0.75px;
    border-radius: 0.25rem;
    border: none;

    &:focus,
    &:hover {
      outline: 1px solid var(--color-primary);
      outline-offset: 1px;
    }
  }

  div {
    position: relative;

    label {
      position: absolute;
      top: 0.4rem;
      left: 0.75rem;
      font-weight: 400;
      color: hsl(from var(--text) h s l / 0.4);
      cursor: text;
      transition: all 200ms ease;

      &:has(+ :focus, + :user-valid) {
        color: var(--text);
        top: -1.25rem;
        left: 0.25rem;
        font-weight: 600;
        font-size: 0.75rem;
        transition: all 200ms ease;
      }
      &::selection {
        background-color: transparent;
      }
    }
  }
}

#close-ws {
  margin-bottom: 1rem;
}
#msg {
  margin-block: 1rem;
}

form {
  display: grid;
  gap: 1.5rem;
}

.mode {
  inset-inline: 50%;
  transform: translate(-50%, -50%);
  box-shadow: 2px 2px 5px var(--color-primary);
  border: 2px solid var(--color-primary);
  border-radius: 0.75rem;
  font-weight: 600;
  padding: 2rem;
  padding-top: 1rem;
  h2 {
    padding: 0;
    margin: 0 0 1rem;
    text-align: center;
    font-size: 1.175rem;
  }
  form {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 1rem;
  }
}

.mode::backdrop {
  backdrop-filter: blur(1px);
}

dialog[open] {
  opacity: 1;
  top: 50%;
}

dialog {
  /* Final state of the exit animation */
  opacity: 0;
  top: 70%;

  transition-property: opacity, overlay, display, top;
  transition-duration: 350ms;
  transition-behavior: allow-discrete;
  transition-timing-function: var(--emphasize);
}

/* Needs to be included after the previous dialog[open] 
   rule to take effect, as the specificity is the same */
@starting-style {
  dialog[open] {
    opacity: 0;
    top: 30%;
  }
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}
